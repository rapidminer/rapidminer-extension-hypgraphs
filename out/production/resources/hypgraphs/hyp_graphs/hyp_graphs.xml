<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../rapidminerreferencemanual/documentation2html.xsl"?>
<p1:documents xmlns:p1="http://rapid-i.com/schemas/documentation/reference/1.0"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://rapid-i.com/schemas/documentation/reference/1.0 ">

    <operator key="operator.hypgraphs:hyp_graphs" locale="en"
              version="6.0.000">
        <title>HypGraphs Operator</title>
        <synopsis>This Operator implements the HypGraphs modeling and analysis approach proposed by Atzmueller et al. (2016) and calculates the evidence score that a hypothesis transition matrix is similar to a given data matrix.
        </synopsis>
        <text>
            <paragraph> The method compares two state transition matrices that represent sequences of events and returns an evidence score that indicates if the hypothesis data is similar to the original data. The closer the hypothesis evidence score is to the evidence score of the data itself, the more likely is that the hypothesis follows the same model.
				The inference step utilizes the HypTrails algorithm (Singer et al. 2015), using the implementation of Florian Lemmerich (https://bitbucket.org/florian_lemmerich/hyptrails4j).
			</paragraph>
            <paragraph>
   		        Atzmueller et al. (2016)
				Atzmueller M, Schmidt A, Kloepper B and Arnu D (2016)
				HypGraphs: An Approach for Modeling and Comparing Graph-Based and Sequential Hypotheses. Proc. ECML-PKDD Workshop on New Frontiers in Mining Complex Patterns (NFMCP), Riva del Garda, Italy, 2016
			</paragraph>
            <paragraph>
				Singer et al. (2015)
				Singer P, Helic D, Hotho A and Strohmaier M (2015) 
				HypTrails: A Bayesian Approach for Comparing Hypotheses About Human Trails on the Web, Proc. International World Wide Web Conference, Florence, Italy, 2015 
            </paragraph>
        </text>
        <inputPorts>
            <port name="data" type="com.rapidminer.example.ExampleSet">
                An example set representing the transition matrix describing the normal behavior. The example set needs to have same number of attributes and example (i.e. a quadratic matrix) 
            </port>
            <port name="hypothesis" type="com.rapidminer.example.ExampleSet">
                The transition matrix describing the hypothesis data that should be compared to the normal state. The example set needs to have same number of attributes and example (i.e. a quadratic matrix) 
            </port>
        </inputPorts>
        <outputPorts>
            <port name="evidence" type="com.rapidminer.example.ExampleSet">
                The evidence scores calculated by HypGraphs. The data evidence value is the evidence score for the data itself, the hypothesis score is the score for the hypothesis matrix and the random score is based on the uniform matrix.  
            </port>
            <port name="prior" type="com.rapidminer.example.ExampleSet">
                The prior matrix based on the input hypothesis.
            </port>
        </outputPorts>

        <!-- description of the parameters and the corresponding values -->
        <parameters>
            <parameter key="k" type="integer">
                Belief factor for the given hypothesis. The higher the value of k the stronger is the belief in the hypothesis; with a lower value of k the hypothesis is assigned more tolerance.
            </parameter>
        </parameters>

<!--         <tutorialProcesses> -->
<!--             <tutorialProcess key="process.python.clustering" title="Applying HypGraphs to test data"> -->
<!--                 <description> -->
<!--                     <paragraph> -->
<!--                         The tutorial process loads and compares two transition matrices -->
<!--                     </paragraph> -->
<!--                 </description> -->
<!--                 <process version="6.4.000"> -->
<!--                     <context> -->
<!--                         <input/> -->
<!--                         <output/> -->
<!--                         <macros/> -->
<!--                     </context> -->
<!--                     <operator activated="true" class="process" compatibility="6.4.000" expanded="true" name="Process"> -->
<!--                         <process expanded="true"> -->
<!--                             <operator activated="true" class="retrieve" compatibility="6.4.000" expanded="true" height="60" name="Retrieve Iris" width="90" x="380" y="210"> -->
<!--                                 <parameter key="repository_entry" value="//Samples/data/Iris"/> -->
<!--                             </operator> -->
<!--                             <connect from_op="Retrieve Iris" from_port="output" to_port="result 1"/> -->
<!--                             <portSpacing port="source_input 1" spacing="0"/> -->
<!--                             <portSpacing port="sink_result 1" spacing="0"/> -->
<!--                             <portSpacing port="sink_result 2" spacing="0"/> -->
<!--                         </process> -->
<!--                     </operator> -->
<!--                 </process> -->
<!--             </tutorialProcess> -->
<!--         </tutorialProcesses> -->

        <relatedDocuments>
            <!-- ... -->
        </relatedDocuments>
    </operator>
</p1:documents>
